from django.core.mail import EmailMessage
from django.http import JsonResponse
from django.conf import settings
import os
import json

@csrf_exempt
def enviar_solicitud_medico(request):
    if request.method == 'POST':
        try:
            # Obtener los datos del formulario
            data = json.loads(request.body)
            nombre = data.get("nombre", "")
            especialidad = data.get("especialidad", "")
            email = data.get("email", "")
            telefono = data.get("telefono", "")
            mensaje = data.get("mensaje", "")

            # Validaci√≥n
            if not (nombre and especialidad and email and telefono):
                return JsonResponse({"success": False, "error": "Todos los campos obligatorios deben estar llenos."}, status=400)

            # üìå 1Ô∏è‚É£ Correo a la empresa
            subject_empresa = "Nueva solicitud de informaci√≥n de un m√©dico"
            message_empresa = (
                f"Nombre: {nombre}\n"
                f"Especialidad: {especialidad}\n"
                f"Correo Electr√≥nico: {email}\n"
                f"Tel√©fono: {telefono}\n"
                f"Mensaje:\n\n{mensaje if mensaje else 'Sin mensaje adicional.'}\n"
            )
            destinatario_empresa = "servesa07@gmail.com"
            email_admin = EmailMessage(subject_empresa, message_empresa, 'servesa07@gmail.com', [destinatario_empresa])
            email_admin.send()

            # üìå 2Ô∏è‚É£ Correo al m√©dico (con HTML y logo adjunto)
            subject_medico = "Bienvenido a MediTest - Tu plataforma de consultas m√©dicas"

            # Ruta del logo y contrato
            logo_path = os.path.join(settings.MEDIA_ROOT, "profile_pictures/logos/logo1.png")
            contrato_path = os.path.join(settings.MEDIA_ROOT, "profile_pictures/contracts/Contrato_MediTest.pdf")

            # Crear el email en HTML
            email_medico = EmailMessage(
                subject=subject_medico,
                body="Este correo requiere un visor de HTML para visualizar correctamente el contenido.",
                from_email='servesa07@gmail.com',
                to=[email]
            )
            email_medico.content_subtype = "html"  # Indicar que el contenido es HTML

            # Adjuntar el logo con un ID para incrustarlo en el HTML
            if os.path.exists(logo_path):
                with open(logo_path, 'rb') as logo_file:
                    email_medico.attach("logo1.png", logo_file.read(), "image/png")
                    email_medico.attachments[-1]['Content-ID'] = '<logo_medico>'
                    email_medico.attachments[-1]['Disposition'] = 'inline'  # Incrustar en el cuerpo del correo

            # Construcci√≥n del HTML con el logo incrustado
            email_medico.body = f"""
            <html>
            <body style="font-family: Arial, sans-serif; color: #333; line-height: 1.6;">
                <div style="background: linear-gradient(135deg, #392682 55%, #28ADA8 100%); padding: 20px; text-align: center; color: #fff;">
                    <img src="cid:logo_medico" alt="MediTest Logo" style="width: 120px; margin-bottom: 10px;">
                    <h2>Consultas M√©dicas Online</h2>
                </div>
                <div style="padding: 20px;">
                    <p>Estimado/a {nombre},</p>
                    <p>Gracias por comunicarte con MediTest. Nos alegra saber que est√°s interesado en formar parte de nuestra plataforma.</p>
                    <p><strong>Para completar tu registro, necesitamos los siguientes documentos:</strong></p>
                    <ul>
                        <li>‚úÖ Certificado de especialidad m√©dica</li>
                        <li>‚úÖ Copia de tu licencia m√©dica</li>
                        <li>‚úÖ Identificaci√≥n oficial</li>
                        <li>‚úÖ Experiencia y referencias profesionales</li>
                    </ul>
                    <p><strong>¬øPor qu√© unirte a MediTest?</strong></p>
                    <ul>
                        <li>üîπ Flexibilidad para gestionar tu agenda</li>
                        <li>üîπ Acceso a pacientes de distintas ubicaciones</li>
                        <li>üîπ Herramientas digitales para recetas y diagn√≥sticos</li>
                        <li>üîπ Soporte t√©cnico y administrativo continuo</li>
                    </ul>
                    <p>Adjunto encontrar√°s un contrato en borrador con m√°s detalles sobre nuestra colaboraci√≥n.</p>
                    <p>Si tienes preguntas, responde a este correo o cont√°ctanos al <strong>+591 68449128</strong>.</p>
                    <p>Atentamente,</p>
                    <p><strong>Equipo de MediTest</strong></p>
                </div>
            </body>
            </html>
            """

            # Adjuntar contrato si existe
            if os.path.exists(contrato_path):
                email_medico.attach_file(contrato_path)

            # Enviar el correo
            email_medico.send()

            return JsonResponse({"success": True, "message": "Solicitud enviada correctamente y respuesta autom√°tica enviada con contrato adjunto"}, status=200)

        except Exception as e:
            return JsonResponse({"success": False, "error": str(e)}, status=400)

    return JsonResponse({"success": False, "error": "M√©todo no permitido"}, status=405)
